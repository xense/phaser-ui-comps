{"version":3,"sources":["webpack://PhaserComps/webpack/universalModuleDefinition","webpack://PhaserComps/webpack/bootstrap","webpack://PhaserComps/./src/components/UIComponentPrototype.js","webpack://PhaserComps/./src/manager/UIManager.js","webpack://PhaserComps/external {\"umd\":\"phaser\",\"commonjs2\":\"phaser\",\"commonjs\":\"phaser\",\"amd\":\"phaser\",\"root\":\"Phaser\"}","webpack://PhaserComps/./src/components/UIButton.js","webpack://PhaserComps/./src/clip/ComponentClip.js","webpack://PhaserComps/./src/components/UIButtonSelect.js","webpack://PhaserComps/./src/components/UIButtonDraggable.js","webpack://PhaserComps/./src/components/UIScrollBar.js","webpack://PhaserComps/./src/components/UIList.js","webpack://PhaserComps/./src/phasercomps.js","webpack://PhaserComps/(webpack)/buildin/global.js","webpack://PhaserComps/./src/components/UIComponents.js","webpack://PhaserComps/./src/components/UIButtonRadio.js","webpack://PhaserComps/./src/components/UIScrollPanel.js","webpack://PhaserComps/./src/components/UIProgressBar.js","webpack://PhaserComps/./src/components/UIContainer.js","webpack://PhaserComps/./src/components/UIListBaseItem.js","webpack://PhaserComps/./src/plugin/Plugin.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_UIManager","_EVENT_STATE","UIComponentPrototype","parent","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_lockId","_parent","_key","_clip","_texts","on","_onEventState","_clipUpdate","Phaser","Events","EventEmitter","clip","removeClip","onClipAppend","_clipProcess","onClipRemove","stateId","getStateId","_setupState","text","textField","getChildText","fromScene","removeListener","destroy","_get","getChildClip","appendClip","doState","onClipProcess","textKey","setState","emit","PhaserComps","UIManager","unregister","register","isLock","enabledIds","registeredComps","id","unlock","push","forEach","length","proto","lockId","indexOf","getById","lockClipBounds","lockClip","UIButton","labelText","_enable","_isPressed","_isOver","_hitZone","label","_updateInteractive","zone","_removeInteractive","setInteractive","useHandCursor","_onPointerDown","_onPointerUp","_onPointerOver","_onPointerOut","disableInteractive","Input","GAMEOBJECT_POINTER_DOWN","GAMEOBJECT_POINTER_UP","GAMEOBJECT_POINTER_OVER","GAMEOBJECT_POINTER_OUT","enable","_setupInteractive","STATE_DOWN","STATE_OVER","STATE_UP","STATE_DISABLE","pointer","localX","localY","event","stopPropagation","isClicked","check","_onClick","getText","setText","getBounds","_phaser","ComponentClip","scene","config","textures","childComponentClips","_config","_textures","Array","isArray","imageFramesMap","_stateManager","StateManager","_childrenById","_createImagesMap","_parseConfig","GameObjects","Container","getStateConfigById","stateIds","force","childId","params","_setupCommonParams","getActiveComponentByKey","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","textureName","texture","frames","getFrameNames","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","frameName","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","children","childConfig","_createChildFromConfig","child","childKey","addAsChild","type","_createImageFromConfig","_createTextFromConfig","_createTileSpriteFromConfig","_createHitZoneFromConfig","_createPolygonFromConfig","mask","createGeometryMask","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","masking","maskedChildId","setMask","add","addComponent","shape","make","graphics","fillStyle","color","alpha","beginPath","vertices","verticesLength","lineTo","closePath","fillPath","existing","sprite","tileSprite","width","height","image","setOrigin","textStyle","align","x","y","component","scaleX","scaleY","angle","State","componentIds","keys","_dynamicChildrenIds","_states","_components","_currentState","_currentStateId","_componentKeys","_residentComponentsByKey","idsArray","states","state","apply","_toConsumableArray","uniq","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","includes","setupState","idsToShow","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","visible","_UIButton2","UIButtonSelect","_select","UIButtonDraggable","_dragBounds","minX","maxX","minY","maxY","_startDragX","_startDragY","_dragZone","gameObject","input","dragStartX","dragStartY","dragX","dragY","newX","newY","setDraggable","_onDragStart","_onDrag","UIScrollBar","vertical","_vertical","_value","_minValue","_maxValue","_valueStep","_buttonStep","btnPrev","EVENT_CLICK","onPrevClick","btnNext","onNextClick","thumb","EVENT_DRAG","_onThumbDrag","_trackStart","_trackLength","_thumbClip","minValue","maxValue","valueStep","val","_updateClips","trackClip","setDragBounds","hitZone","_onZoneDown","_updateThumbFromValue","barPosition","Math","round","positionX","positionY","v","_UIComponentPrototype2","UIList","rendererClass","_rendererClass","_items","pop","len","_data","letterSpacing","index","dataItem","_getRenderer","data","renderer","EVENT_ITEM_CHANGE","onItemChange","clean","item","_updateData","UIComponents","Plugin","global","g","Function","e","UIButtonRadio","UIScrollPanel","UIProgressBar","UIContainer","UIListBaseItem","_UIButtonSelect2","appendTo","_sibling","appendToRadio","radio","removeFromSibling","select","_set","_broadcastSelect","container","panelKey","scrollBarKey","dimensionsKey","_container","EVENT_STATE","_onContainerUpdate","_panelKey","_dimensionsKey","_scrollBar","EVENT_CHANGE","_onScrollBar","_panel","dims","_scrollBounds","PROGRESS_STATE_REGEX","_steps","_makeSteps","_applyValue","lowConfig","highConfig","interpolation","resultConfig","stepsCount","low","high","stepValue","lowChildConfig","highChildConfig","applyChildParams","getStateIds","test","stepConfig","stepObject","parseInt","exec","stateConfig","getStateConfig","_makeFullConfig","sort","a","b","_children","_addUIComponentToContainerClip","splice","_removeUIComponentFromContainerClip","destroyChild","remove","_commitData","_ComponentClip","mgr","registerGameObject","makeComponent","Plugins","BasePlugin","DefaultCfg","plugin","start"],"mappings":"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","file":"phaser-ui-comps.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"phaser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"phaser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PhaserComps\"] = factory(require(\"phaser\"));\n\telse\n\t\troot[\"PhaserComps\"] = factory(root[\"Phaser\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","import \"phaser\";\r\nimport UIManager from \"../manager/UIManager\";\r\n\r\nconst _EVENT_STATE = \"event_state\";\r\n\r\n/**\r\n * @memberOf PhaserComps.UIComponents\r\n * @class UIComponentPrototype\r\n * @classdesc Base ComponentView controller class. Used to setup component state and texts.\r\n * Once root instance is created, you must append a [ComponentClip]{@link PhaserComps.ComponentClip}\r\n * instance to it.\r\n *\r\n * Child clips will be appended automatically on every state change, their clips will be found by keys.\r\n * On state change notifies all child components to update their states.\r\n *\r\n * *One of the main ideas of this framework is if there is no clip for UIComponentPrototype\r\n * at current state or at all, nothing bad happens.*\r\n * @inheritDoc\r\n * @extends Phaser.Events.EventEmitter\r\n * @property {String} lockId Used by UIManager, see {@link PhaserComps.UIManager}\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} [parent] UIComponentPrototype instance to find clip inside\r\n * @param {String} [key] key to find clip inside parent\r\n */\r\nexport default class UIComponentPrototype extends Phaser.Events.EventEmitter {\r\n\r\n\tstatic get EVENT_STATE() { return _EVENT_STATE; }\r\n\r\n\tconstructor(parent, key) {\r\n\t\tsuper();\r\n\r\n\t\t/**\r\n\t\t * @type {String}\r\n\t\t */\r\n\t\tthis._lockId = null;\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {UIComponentPrototype}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._parent = parent;\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @protected\r\n\t\t */\r\n\t\tthis._key = key;\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {PhaserComps.ComponentClip}\r\n\t\t * @protected\r\n\t\t */\r\n\t\tthis._clip = null;\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {Object<String>}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._texts = {};\r\n\r\n\t\tif (key && parent) {\r\n\t\t\t// sign on parents state update\r\n\t\t\tparent.on(_EVENT_STATE, this._onEventState, this);\r\n\t\t}\r\n\t\tthis._clipUpdate();\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#appendClip\r\n\t * @description\r\n\t * Append a instance to this to control it. State setup will be processed immediately.<br>\r\n\t * Use only for root instance, child instances will be appended automatically depending on state of this.\r\n\t * @param {PhaserComps.ComponentClip} clip ComponentView instance to append\r\n\t */\r\n\tappendClip(clip) {\r\n\t\tif (this._clip === clip) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._clip !== null) {\r\n\t\t\tthis.removeClip();\r\n\t\t}\r\n\t\tthis._clip = clip;\r\n\t\tif (this._clip) {\r\n\t\t\tthis.onClipAppend(this._clip);\r\n\t\t}\r\n\t\tthis._clipProcess();\r\n\t}\r\n\r\n\t/** @return {String} */\r\n\tget lockId() {\r\n\t\treturn this._lockId;\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Phaser.Geom.Rectangle}\r\n\t */\r\n\tget lockClipBounds() { return null; } // override\r\n\r\n\t/** @return {Phaser.GameObjects.GameObject|*} */\r\n\tget lockClip() { return null; } // override\r\n\r\n\t/** @param {string} value */\r\n\tset lockId(value) {\r\n\t\tif (this._lockId === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._lockId) {\r\n\t\t\tPhaserComps.UIManager.unregister(this);\r\n\t\t}\r\n\t\tthis._lockId = value;\r\n\t\tif (this._lockId) {\r\n\t\t\tPhaserComps.UIManager.register(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Override this, if you want to do something, when new clip removed,\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#onClipAppend\r\n\t * @protected\r\n\t * @param {PhaserComps.ComponentClip} clip\r\n\t */\r\n\tonClipAppend(clip) {\r\n\t\t// override me\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#removeClip\r\n\t * @protected\r\n\t */\r\n\tremoveClip() {\r\n\t\tthis.onClipRemove(this._clip);\r\n\t\tthis._clip = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Override this, if you want to do something, when new clip removed,\r\n\t * like remove clip events listeners.\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#onClipRemove\r\n\t * @protected\r\n\t * @param clip\r\n\t */\r\n\tonClipRemove(clip) {\r\n\t\t// override me\r\n\t}\r\n\r\n\t/**\r\n\t * Call doState to setup new state, id is provided by [getStateId]{@link PhaserComps.UIComponents.UIComponentPrototype#getStateId}\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#doState\r\n\t * @protected\r\n\t * @see #getStateId\r\n\t */\r\n\tdoState() {\r\n\t\tlet stateId = this.getStateId();\r\n\t\tthis._setupState(stateId);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns saved text by key, if it was set previously\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#getText\r\n\t * @param {String} key\r\n\t * @returns {String|Array<String>} text value\r\n\t */\r\n\tgetText(key) {\r\n\t\treturn this._texts[key];\r\n\t}\r\n\r\n\t/**\r\n\t * Set text value to the textfield with provided key.\r\n\t * Text value is saved in the component's instance dictionary and will be set to the textField on every state change\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#setText\r\n\t * @param {String} key TextField key\r\n\t * @param {String|Array<String>} text text string\r\n\t */\r\n\tsetText(key, text) {\r\n\t\tif (this._texts[key] === text) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._texts[key] = text;\r\n\t\tif (this._clip) {\r\n\t\t\tlet textField = this._clip.getChildText(key);\r\n\t\t\tif (textField) {\r\n\t\t\t\ttextField.text = text;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#getStateId\r\n\t * @description\r\n\t * Current state id, used by [doState]{@link PhaserComps.UIComponents.UIComponentPrototype#doState} method\r\n\t * @returns {String}\r\n\t * @protected\r\n\t */\r\n\tgetStateId() {\r\n\t\treturn \"default\";\r\n\t}\r\n\r\n\t/**\r\n\t * Destroy ComponentPrototype and clip, if exists\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#destroy\r\n\t * @protected\r\n\t * @param {Boolean} [fromScene=false]\r\n\t */\r\n\tdestroy(fromScene) {\r\n\t\tif (this._parent){\r\n\t\t\tthis._parent.removeListener(_EVENT_STATE, this._onEventState);\r\n\t\t}\r\n\t\tif (this._clip) {\r\n\t\t\tthis._clip.destroy(fromScene);\r\n\t\t}\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#_clipUpdate\r\n\t * @private\r\n\t */\r\n\t_clipUpdate() {\r\n\t\tif (!this._key) {\r\n\t\t\t// parent is clip itself\r\n\t\t} else {\r\n\t\t\tif (this._parent._clip) {\r\n\t\t\t\tlet clip = this._parent._clip.getChildClip(this._key);\r\n\t\t\t\tthis.appendClip(clip);\r\n\t\t\t} else {\r\n\t\t\t\tthis.appendClip(null);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#_clipProcess\r\n\t * @private\r\n\t */\r\n\t_clipProcess() {\r\n\t\tif (!this._clip) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.doState();\r\n\t\tthis.onClipProcess();\r\n\t}\r\n\r\n\t/**\r\n\t * Override this, if you want to do something, when state or clip changes.\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#onClipProcess\r\n\t * @protected\r\n\t * @override\r\n\t */\r\n\tonClipProcess() {\r\n\t\t// override me\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#_setupState\r\n\t * @param {String} stateId state id to setup\r\n\t * @private\r\n\t */\r\n\t_setupState(stateId) {\r\n\t\tif (this._clip) {\r\n\t\t\tthis._clip.setState(stateId);\r\n\r\n\t\t\t// update textfields\r\n\t\t\tfor (let textKey in this._texts) {\r\n\t\t\t\tlet textField = this._clip.getChildText(textKey);\r\n\t\t\t\tif (textField) {\r\n\t\t\t\t\ttextField.text = this._texts[textKey];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.emit(_EVENT_STATE);\r\n\t}\r\n\r\n\t/**\r\n\t * Parent state change listener\r\n\t * @method PhaserComps.UIComponents.UIComponentPrototype#_onEventState\r\n\t * @private\r\n\t */\r\n\t_onEventState() {\r\n\t\tthis._clipUpdate();\r\n\t}\r\n}","let isLock = false;\r\nconst enabledIds = [];\r\nconst registeredComps = {};\r\n\r\n/**\r\n * @namespace PhaserComps.UIManager\r\n * @memberOf PhaserComps\r\n * @classdesc Allows to lock all ui, except for provided lock ids.\r\n * For this, you must set `lockId` property to UIComponentPrototype instances you want to enable,\r\n * and then switch theirs availability by UIManager's\r\n * {@link lock} and {@link unlock} methods\r\n *\r\n * For example, locked UIButton will still interact to mouse events, but will not emit click event.\r\n *\r\n * This can be useful in game tutorials.\r\n */\r\nexport default class UIManager {\r\n\r\n\t/**\r\n\t * @memberOf PhaserComps.UIManager\r\n\t * @description Makes only components with provided ids list (or one id string) to emit UI events\r\n\t *\r\n\t * *Note, that method rewrites current enabled ids list every call.*\r\n\t * @param {String | Array<String>} id component's lock id, or Array of lock ids to be only enabled\r\n\t */\r\n\tstatic lock(id) {\r\n\t\tthis.unlock();\r\n\t\tif (typeof id === \"string\") {\r\n\t\t\tenabledIds.push(id);\r\n\t\t} else {\r\n\t\t\tid.forEach(value => enabledIds.push(value));\r\n\t\t}\r\n\t\tisLock = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @memberOf PhaserComps.UIManager\r\n\t * @description Releases all components\r\n\t */\r\n\tstatic unlock() {\r\n\t\tenabledIds.length = 0;\r\n\t\tisLock = false;\r\n\t}\r\n\r\n\t/** @param {UIComponentPrototype} proto */\r\n\tstatic register(proto) {\r\n\t\tregisteredComps[proto.lockId] = proto;\r\n\t}\r\n\r\n\t/** @param {UIComponentPrototype} proto */\r\n\tstatic unregister(proto) {\r\n\t\tif (registeredComps[proto.lockId]) {\r\n\t\t\tregisteredComps[proto.lockId] = null;\r\n\t\t\tdelete registeredComps[proto.lockId];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @memberOf PhaserComps.UIManager\r\n\t * @description called from component to check, if it's allowed to emit UI event.\r\n\t * @param {String} id\r\n\t */\r\n\tstatic check(id) {\r\n\t\tif (!isLock) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn enabledIds.indexOf(id) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @return {PhaserComps.UIComponents.UIComponentPrototype}\r\n\t */\r\n\tstatic getById(id) {\r\n\t\treturn registeredComps[id];\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {Phaser.Geom.Rectangle}\r\n\t */\r\n\tstatic getBoundsById(id) {\r\n\t\tconst proto = this.getById(id);\r\n\t\treturn proto ? proto.lockClipBounds : null;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} id\r\n\t * @returns {Phaser.GameObjects.GameObject|*}\r\n\t */\r\n\tstatic getClipById(id) {\r\n\t\tconst proto = this.getById(id);\r\n\t\treturn proto ? proto.lockClip : null;\r\n\t}\r\n\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import UIComponentPrototype from \"./UIComponentPrototype\";\r\nimport UIManager from \"../manager/UIManager\";\r\n\r\nconst HIT_ZONE = \"HIT_ZONE\";\r\nconst LABEL = \"label\";\r\n\r\nconst _STATE_UP = \"up\";\r\nconst _STATE_DOWN = \"down\";\r\nconst _STATE_OVER = \"over\";\r\nconst _STATE_DISABLE = \"disable\";\r\n\r\nconst _EVENT_CLICK = \"event_click\";\r\n\r\n/**\r\n * @class UIButton\r\n * @memberOf PhaserComps.UIComponents\r\n * @classdesc\r\n * Button component prototype, has states `up`, `over`, `down`, `disable`\r\n * Emits EVENT_CLICK on click.\r\n * When disabled, doesn't interact to mouse events and move to state `disable`\r\n * @extends PhaserComps.UIComponents.UIComponentPrototype\r\n * @emits PhaserComps.UIComponents.UIButton.EVENT_CLICK\r\n *\r\n * @property {Boolean} enable activate/deactivate button interaction. if false, button state is set to `disable`\r\n * @property {String} label get/set button label text\r\n *\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} [parent] UIComponentPrototype instance to find clip inside\r\n * @param {String} [key] key to find clip inside parent\r\n * @param {String} [labelText] text to set for a 'label' key\r\n */\r\nexport default class UIButton extends UIComponentPrototype {\r\n\r\n\t/**\r\n\t * @event PhaserComps.UIComponents.UIButton.EVENT_CLICK\r\n\t * @memberOf PhaserComps.UIComponents.UIButton\r\n\t * @description\r\n\t * Emitted on click\r\n\t */\r\n\tstatic get EVENT_CLICK() { return _EVENT_CLICK; }\r\n\r\n\tconstructor(parent, key, labelText) {\r\n\t\tsuper(parent, key);\r\n\t\tthis._enable = true;\r\n\t\tthis._isPressed = false;\r\n\t\tthis._isOver = false;\r\n\t\t/**\r\n\t\t * @type {Phaser.GameObjects.Zone}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._hitZone = null;\r\n\t\tif (labelText) {\r\n\t\t\tthis.label = labelText;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButton#onClipAppend\r\n\t * @inheritDoc\r\n\t */\r\n\tonClipAppend(clip) {\r\n\t\tthis._updateInteractive();\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButton#onClipRemove\r\n\t * @inheritDoc\r\n\t */\r\n\tonClipRemove(clip) {\r\n\t\tlet zone = clip.getChildClip(HIT_ZONE);\r\n\t\tif (!zone) {\r\n\t\t\t//console.warn(\"no hit zone for\", this._key);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._removeInteractive(zone);\r\n\t}\r\n\r\n\tget label() { return this.getText(LABEL); }\r\n\tset label(value) {\r\n\t\tthis.setText(LABEL, value);\r\n\t}\r\n\r\n\tget enable() { return this._enable; }\r\n\tset enable(value) {\r\n\t\tif (this._enable === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._enable = value;\r\n\t\tthis._updateInteractive();\r\n\t\tthis.doState();\r\n\t}\r\n\r\n\t/**\r\n\t * @method UIButton#_setupInteractive\r\n\t * @param {Phaser.GameObjects.Zone} zone\r\n\t * @private\r\n\t */\r\n\t_setupInteractive(zone) {\r\n\t\tzone.setInteractive({ useHandCursor: true });\r\n\t\tzone.on(\"pointerdown\", this._onPointerDown, this);\r\n\t\tzone.on(\"pointerup\", this._onPointerUp, this);\r\n\t\tzone.on(\"pointerover\", this._onPointerOver, this);\r\n\t\tzone.on(\"pointerout\", this._onPointerOut, this);\r\n\t\tthis._hitZone = zone;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButton#_removeInteractive\r\n\t * @param {Phaser.GameObjects.Zone} zone\r\n\t * @private\r\n\t */\r\n\t_removeInteractive(zone) {\r\n\t\tzone.disableInteractive();\r\n\t\tzone.removeListener(Phaser.Input.Events.GAMEOBJECT_POINTER_DOWN, this._onPointerDown, this);\r\n\t\tzone.removeListener(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, this._onPointerUp, this);\r\n\t\tzone.removeListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OVER, this._onPointerOver, this);\r\n\t\tzone.removeListener(Phaser.Input.Events.GAMEOBJECT_POINTER_OUT, this._onPointerOut, this);\r\n\t\tthis._hitZone = null;\r\n\t}\r\n\r\n\tget lockClipBounds() {\r\n\t\treturn this._hitZone ? this._hitZone.getBounds() : null;\r\n\t}\r\n\r\n\tget lockClip() {\r\n\t\treturn this._hitZone;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButton#_updateInteractive\r\n\t * @private\r\n\t */\r\n\t_updateInteractive() {\r\n\t\tif (!this._clip) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet zone = this._clip.getChildClip(HIT_ZONE);\r\n\t\tif (!zone) {\r\n\t\t\t//console.warn(\"no hit zone for\", this._key);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.enable) {\r\n\t\t\tthis._setupInteractive(zone);\r\n\t\t} else {\r\n\t\t\tthis._removeInteractive(zone);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButton#getStateId\r\n\t * @inheritDoc\r\n\t * @returns {String}\r\n\t */\r\n\tgetStateId() {\r\n\t\tif (!this.enable) {\r\n\t\t\treturn this.STATE_DISABLE;\r\n\t\t}\r\n\t\tif (this._isPressed) {\r\n\t\t\treturn this.STATE_DOWN;\r\n\t\t}\r\n\t\tif (this._isOver) {\r\n\t\t\treturn this.STATE_OVER;\r\n\t\t}\r\n\t\treturn this.STATE_UP;\r\n\t}\r\n\r\n\t/**\r\n\t * @protected\r\n\t * @method PhaserComps.UIComponents.UIButton#_onClick\r\n\t * @description\r\n\t * called when button hit zone clicked, emits EVENT_CLICK\r\n\t */\r\n\t_onClick() {\r\n\t\tthis.emit(_EVENT_CLICK);\r\n\t}\r\n\r\n\tget STATE_UP() { return _STATE_UP; }\r\n\tget STATE_DOWN() { return _STATE_DOWN; }\r\n\tget STATE_OVER() { return _STATE_OVER; }\r\n\tget STATE_DISABLE() { return _STATE_DISABLE; }\r\n\r\n\t/**\r\n\t * @method UIButton#_onPointerOut\r\n\t * @protected\r\n\t */\r\n\t_onPointerOut() {\r\n\t\tthis._isOver = false;\r\n\t\tthis._isPressed = false;\r\n\t\tthis.doState();\r\n\t}\r\n\r\n\t/**\r\n\t * @method UIButton#_onPointerOver\r\n\t * @protected\r\n\t */\r\n\t_onPointerOver() {\r\n\t\tthis._isOver = true;\r\n\t\tthis.doState();\r\n\t}\r\n\r\n\t/**\r\n\t * @method UIButton#_onPointerDown\r\n\t * @protected\r\n\t */\r\n\t_onPointerDown(pointer, localX, localY, event) {\r\n\t\tthis._isPressed = true;\r\n\t\tthis.doState();\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * @method UIButton#_onPointerUp\r\n\t * @protected\r\n\t */\r\n\t_onPointerUp(pointer, localX, localY, event) {\r\n\t\tlet isClicked = this._isPressed && this._isOver;\r\n\t\tthis._isPressed = false;\r\n\t\tthis.doState();\r\n\t\tif (isClicked) {\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tif (UIManager.check(this.lockId)) {\r\n\t\t\t\tthis._onClick();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method UIButton#destroy\r\n\t * @protected\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy(fromScene) {\r\n\t\tif (this._clip) {\r\n\t\t\tlet zone = this._clip.getChildClip(HIT_ZONE);\r\n\t\t\tif (zone) {\r\n\t\t\t\tthis._removeInteractive(zone);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.destroy(fromScene);\r\n\t}\r\n}","import Phaser from \"phaser\";\r\n\r\nconst TYPE_IMAGE = \"image\";\r\nconst TYPE_COMPONENT = \"component\";\r\nconst TYPE_TEXT = \"text\";\r\nconst TYPE_TILE_SPRITE = \"tileSprite\";\r\nconst TYPE_POLYGON = \"polygon\";\r\nconst TYPE_ZONE = \"zone\";\r\n\r\n\r\n/**\r\n * @typedef {Object} PhaserComps.ComponentClip.StateConfig\r\n * Component state config object, generated by jsfl exporter\r\n * @memberOf PhaserComps.ComponentClip\r\n * @property {number} [x=0] x coordinate of component\r\n * @property {number} [y=0] y coordinate of component\r\n * @property {number} [scaleX=1] x scale of component\r\n * @property {number} [scaleY=1] y scale of component\r\n * @property {number} [angle=0] angle of component\r\n * @property {Number} [alpha=1] Opacity of component (`0` to `1`).\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhaserComps.ComponentClip.ComponentConfig\r\n * @description\r\n * Component Config object, generated by jsfl exporter\r\n * @memberOf PhaserComps.ComponentClip\r\n * @property {String} type supported types are\r\n * `image`, `component`, `text`, `tileSprite`, `polygon`, `zone`\r\n * @property {Array<PhaserComps.ComponentClip.ComponentConfig>} [children] component children list\r\n * @property {String} [childId] unique component id, used by {@link StateManager}\r\n * @property {String} [key] key of component to find it with {@link UIComponentPrototype}.\r\n * Must be unique inside one state\r\n * @property {String} [image] Texture frame name. Only for component types `image` and `tileSprite`\r\n * @property {Phaser.GameObjects.TextStyle} [style] text style object, used only for `text` type\r\n * @property {Object<String, PhaserComps.ComponentClip.StateConfig>} [states] object keys are component ids to be enabled\r\n * at the specified state, and the StateConfig is position and scale params to setup for component\r\n * @property {Array<String>} masking List of component ids, that will be masked by this component.\r\n * Currently only polygon masks available.\r\n * @property {Number} [x=0] x coordinate of component\r\n * @property {Number} [y=0] y coordinate of component\r\n * @property {Number} [scaleX=1] x scale of component\r\n * @property {Number} [scaleY=1] y scale of component\r\n * @property {Number} [angle=0] angle of component in degrees\r\n * @property {Number} [alpha=1] Opacity of component (`0` to `1`).\r\n * @property {Number} [width] Component width.\r\n * only for `zone` type\r\n * @property {Number} [height] Component height.\r\n * only for `zone` type\r\n * @property {Array.<Number>} [vertices] Array of polygon vertices coords, `x` and `y` interleaving.\r\n * Only for `polygon` type\r\n * @property {int} [color] polygon color.\r\n * Only for `polygon` type\r\n */\r\n\r\n/**\r\n * @class ComponentClip\r\n * @memberOf PhaserComps\r\n * @classdesc\r\n * @extends Phaser.GameObjects.Container\r\n * Component clip is Phaser Container instance.\r\n * Builds itself with provided jsfl-generated config object.\r\n *\r\n * Clip supports state switching. Best if controlled by\r\n * [UIComponentPrototype]{@link PhaserComps.UIComponents.UIComponentPrototype} instance\r\n *\r\n * @see PhaserComps.UIComponents.UIComponentPrototype\r\n *\r\n * @param {Phaser.Scene} scene Phaser scene to create component at\r\n * @param {ComponentConfig} config jsfl-generated config object\r\n * @param {Array<String>|String} textures texure name or Array of texture names, where component should find its texture frames\r\n */\r\nexport default class ComponentClip extends Phaser.GameObjects.Container {\r\n\tconstructor(scene, config, textures) {\r\n\t\tsuper(scene, 0, 0);\r\n\t\tthis.childComponentClips = [];\r\n\r\n\t\t/**\r\n\t\t * component config object\r\n\t\t * @type {Object}\r\n\t\t * */\r\n\t\tthis._config = config;\r\n\r\n\t\t/**\r\n\t\t * component key\r\n\t\t * @type {String}\r\n\t\t */\r\n\t\tthis._key = config.key;\r\n\r\n\t\t/**\r\n\t\t * list of texture names to use in this component\r\n\t\t * @type {Array<String>}\r\n\t\t * */\r\n\t\tthis._textures = Array.isArray(textures) ? textures : [textures];\r\n\r\n\t\t/**\r\n\t\t * Texture frames to texture names map\r\n\t\t * @type {Object<String>}\r\n\t\t */\r\n\t\tthis.imageFramesMap = {};\r\n\r\n\t\t/**\r\n\t\t * Component's state manager instance. Helps to switch states and find active children by key\r\n\t\t * @type {StateManager}\r\n\t\t * */\r\n\t\tthis._stateManager = new StateManager(this, config);\r\n\r\n\t\tthis._childrenById = {};\r\n\r\n\t\tthis._createImagesMap(textures);\r\n\t\tthis._parseConfig();\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @method PhaserComps.ComponentClip#getStateConfig\r\n\t * @description\r\n\t * Get raw state config object by state id, if exists\r\n\t * @param {String} stateId state id\r\n\t */\r\n\tgetStateConfig(stateId) {\r\n\t\treturn this._stateManager.getStateConfigById(stateId);\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @method PhaserComps.ComponentClip#getStateIds\r\n\t * @description\r\n\t * Component state ids list.\r\n\t * @returns {Array<String>}\r\n\t */\r\n\tgetStateIds() {\r\n\t\treturn this._stateManager.stateIds;\r\n\t}\r\n\t/**\r\n\t * @public\r\n\t * @method PhaserComps.ComponentClip#setState\r\n\t * @description\r\n\t * Switch component view to specified stateId, if such stateId exists.\r\n\t * Do not use it manually, if you are using UIComponentPrototype to control the view\r\n\t *\r\n\t * @param {String} stateId state id to switch to\r\n\t * @param {Boolean} [force=false] if true, state will be setup again even if stateId was not changed\r\n\t */\r\n\tsetState(stateId, force) {\r\n\t\tthis._stateManager.setState(stateId, force);\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @method PhaserComps.ComponentClip#applyChildParams\r\n\t * @description\r\n\t * Apply child params\r\n\t * @param {String} childId\r\n\t * @param {StateConfig} params\r\n\t */\r\n\tapplyChildParams(childId, params) {\r\n\t\tif (!this._childrenById.hasOwnProperty(childId)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tComponentClip._setupCommonParams(this._childrenById[childId], params);\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @method PhaserComps.ComponentClip#getChildClip\r\n\t * @description returns current active component child view instance\r\n\t * @param {String} key child key\r\n\t * @returns {PhaserComps.ComponentClip|Phaser.GameObjects.GameObject}\r\n\t */\r\n\tgetChildClip(key) {\r\n\t\treturn this._stateManager.getActiveComponentByKey(key);\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @method PhaserComps.ComponentClip#getChildText\r\n\t * @description returns current active component child text instance\r\n\t * @param {String} key child text field key\r\n\t * @returns {Phaser.GameObjects.Text}\r\n\t */\r\n\tgetChildText(key) {\r\n\t\t// TODO separate getter\r\n\t\treturn this._stateManager.getActiveComponentByKey(key);\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @method PhaserComps.ComponentClip#destroy\r\n\t * @description destroy all child GameObjects and child clips recursively\r\n\t * @param {Boolean} [fromScene=false]\r\n\t */\r\n\tdestroy(fromScene) {\r\n\t\tfor (let child of this.childComponentClips) {\r\n\t\t\tchild.destroy(fromScene);\r\n\t\t}\r\n\t\tsuper.destroy(fromScene)\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.ComponentClip#_createImagesMap\r\n\t * @description\r\n\t * Fill the imageFramesMap object from provided textures.\r\n\t * imageFramesMap used to\r\n\t * @param {Array<String>} textures\r\n\t * @private\r\n\t * @ignore\r\n\t */\r\n\t_createImagesMap(textures) {\r\n\t\tfor (let textureName of textures) {\r\n\t\t\tconst texture = this.scene.textures.get(textureName);\r\n\t\t\tif (!texture) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst frames = texture.getFrameNames();\r\n\t\t\tfor (let frameName of frames) {\r\n\t\t\t\tthis.imageFramesMap[frameName] = textureName;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.ComponentClip#_parseConfig\r\n\t * @description\r\n\t * Builds component from config\r\n\t * @private\r\n\t * @ignore\r\n\t */\r\n\t_parseConfig() {\r\n\t\t//ComponentView._setupCommonParams(this, this._config);\r\n\t\tif (this._config.hasOwnProperty(\"children\")) {\r\n\t\t\tfor (let childConfig of this._config.children) {\r\n\t\t\t\tthis._createChildFromConfig(childConfig);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.ComponentClip#_createChildFromConfig\r\n\t * @description creates child instance, depending on its type, add it to state manager\r\n\t * @param {ComponentConfig} config child component config object\r\n\t * @private\r\n\t * @ignore\r\n\t */\r\n\t_createChildFromConfig(config) {\r\n\t\tlet child = null;\r\n\t\tlet childId = config.childId;\r\n\t\tlet childKey = config.key;\r\n\t\tlet addAsChild = true;\r\n\t\tif (config.type === TYPE_IMAGE) {\r\n\t\t\tchild = this._createImageFromConfig(config);\r\n\t\t} else if (config.type === TYPE_TEXT) {\r\n\t\t\tchild = this._createTextFromConfig(config);\r\n\t\t} else if (config.type === TYPE_TILE_SPRITE) {\r\n\t\t\tchild = this._createTileSpriteFromConfig(config);\r\n\t\t} else if (config.type === TYPE_COMPONENT) {\r\n\t\t\tchild = new ComponentClip(this.scene, config, this._textures);\r\n\t\t\tComponentClip._setupCommonParams(child, config);\r\n\t\t} else if (config.type === TYPE_ZONE) {\r\n\t\t\tchild = this._createHitZoneFromConfig(config);\r\n\t\t} else if (config.type === TYPE_POLYGON) {\r\n\t\t\tchild = this._createPolygonFromConfig(config);\r\n\t\t\tif (config.hasOwnProperty(\"masking\")) {\r\n\t\t\t\tlet mask = child.createGeometryMask();\r\n\t\t\t\tfor (let maskedChildId of config.masking) {\r\n\t\t\t\t\tlet maskedChild = this._childrenById[maskedChildId];\r\n\t\t\t\t\tmaskedChild.setMask(mask);\r\n\t\t\t\t}\r\n\t\t\t\taddAsChild = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (child === null) {\r\n\t\t\t//console.warn(\"unknown component type\", config.type, config);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//ComponentView._setupCommonParams(child, config);\r\n\t\tthis._childrenById[childId] = child;\r\n\t\tthis.childComponentClips.push(child);\r\n\t\tif (addAsChild) {\r\n\t\t\tthis.add(child);\r\n\t\t}\r\n\t\tthis._stateManager.addComponent(child, childId, childKey);\r\n\t}\r\n\r\n\t/**\r\n\t * @description Create simple polygon with provided vertices from config\r\n\t * @method PhaserComps.ComponentClip#_createPolygonFromConfig\r\n\t * @param {PhaserComps.ComponentClip.ComponentConfig} config\r\n\t * @returns {Phaser.GameObjects.Graphics}\r\n\t * @private\r\n\t * @ignore\r\n\t */\r\n\t_createPolygonFromConfig(config) {\r\n\t\tconst shape = this.scene.make.graphics();\r\n\t\tshape.fillStyle(config.color, config.hasOwnProperty(\"alpha\") ? config.alpha : 1);\r\n\t\tshape.beginPath();\r\n\t\tlet vertices = config.vertices;\r\n\t\tlet verticesLength = vertices.length;\r\n\t\tfor (let i = 0; i < verticesLength; i += 2) {\r\n\t\t\tshape.lineTo(vertices[i], vertices[i + 1]);\r\n\t\t}\r\n\t\tshape.closePath();\r\n\t\tshape.fillPath();\r\n\t\tComponentClip._setupCommonParams(shape, config);\r\n\t\tif (!config.hasOwnProperty(\"masking\")) {\r\n\t\t\tthis.scene.add.existing(shape);\r\n\t\t}\r\n\t\treturn shape;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.ComponentClip#_createTileSpriteFromConfig\r\n\t * @description creates Phaser.GameObjects.TileSprite by jsfl-generated config and returns it\r\n\t * @param {Object} config jsfl-generated TileSprite config object\r\n\t * @returns {Phaser.GameObjects.TileSprite}\r\n\t * @private\r\n\t * @ignore\r\n\t */\r\n\t_createTileSpriteFromConfig(config) {\r\n\t\tconst sprite = this.scene.add.tileSprite(\r\n\t\t\t0, 0,\r\n\t\t\tconfig.width, config.height,\r\n\t\t\tthis.imageFramesMap[config.image],\r\n\t\t\tconfig.image\r\n\t\t);\r\n\t\tsprite.setOrigin(0.5, 0.5); // Animate places shape coords to center\r\n\t\tComponentClip._setupCommonParams(sprite, config);\r\n\t\treturn sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.ComponentClip#_createImageFromConfig\r\n\t * @description creates Phaser.GameObjects.Image instance by jsfl-generated config and returns it\r\n\t * @param {Object} config jsfl-generated Image config object\r\n\t * @returns {Phaser.GameObjects.Image}\r\n\t * @private\r\n\t * @ignore\r\n\t */\r\n\t_createImageFromConfig(config) {\r\n\t\tconst image = this.scene.add.image(\r\n\t\t\t0, 0,\r\n\t\t\tthis.imageFramesMap[config.image],\r\n\t\t\tconfig.image\r\n\t\t);\r\n\t\timage.setOrigin(0);\r\n\t\tComponentClip._setupCommonParams(image, config);\r\n\t\treturn image;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.ComponentClip#_createTextFromConfig\r\n\t * @description creates Phaser.GameObjects.Text instance by jsfl-generated config and returns it\r\n\t * @param {Object} config jsfl-generated Text config object\r\n\t * @returns {Phaser.GameObjects.Text}\r\n\t * @private\r\n\t * @ignore\r\n\t */\r\n\t_createTextFromConfig(config) {\r\n\t\tconst text = this.scene.add.text(0, 0, config.text, config.textStyle);\r\n\t\tif (config.textStyle.align === \"center\") {\r\n\t\t\ttext.setOrigin(0.5, 0);\r\n\t\t} else if (config.textStyle.align === \"right\") {\r\n\t\t\ttext.setOrigin(1, 0);\r\n\t\t} else {\r\n\t\t\ttext.setOrigin(0);\r\n\t\t}\r\n\t\tComponentClip._setupCommonParams(text, config);\r\n\t\treturn text;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.ComponentClip#_createHitZoneFromConfig\r\n\t * @description creates Phaser.GameObjects.Zone instance by jsfl-generated config and returns it\r\n\t * @param {Object} config jsfl-generated Zone config object\r\n\t * @return {Phaser.GameObjects.Zone}\r\n\t * @private\r\n\t * @ignore\r\n\t */\r\n\t_createHitZoneFromConfig(config) {\r\n\t\treturn this.scene.add.zone(\r\n\t\t\tconfig.x || 0,\r\n\t\t\tconfig.y || 0,\r\n\t\t\tconfig.width,\r\n\t\t\tconfig.height\r\n\t\t).setOrigin(0);\r\n\t}\r\n\r\n\t/**\r\n\t * @memberOf ComponentClip\r\n\t * @description setup common game object params from jsfl-generated config\r\n\t * @param {*} component\r\n\t * @param {Object} config\r\n\t * @ignore\r\n\t */\r\n\tstatic _setupCommonParams(component, config) {\r\n\t\tlet x = config.x || 0;\r\n\t\tlet y = config.y || 0;\r\n\t\tlet scaleX = config.scaleX || 1;\r\n\t\tlet scaleY = config.scaleY || 1;\r\n\t\tlet angle = config.angle || 0;\r\n\t\tlet alpha = config.hasOwnProperty(\"alpha\") ? config.alpha : 1;\r\n\t\tcomponent.x = x;\r\n\t\tcomponent.y = y;\r\n\t\tcomponent.scaleX = scaleX;\r\n\t\tcomponent.scaleY = scaleY;\r\n\t\tcomponent.angle = angle;\r\n\t\tcomponent.alpha = alpha;\r\n\t}\r\n}\r\n\r\nclass State {\r\n\t/**\r\n\t * @class State\r\n\t * @classdesc State config decorator, for\r\n\t * [StateManager]{@link PhaserComps.ComponentClip.StateManager} internal use only\r\n\t * @param {PhaserComps.ComponentClip.StateConfig} config\r\n\t * @memberOf PhaserComps.ComponentClip\r\n\t */\r\n\tconstructor(config) {\r\n\t\t/**\r\n\t\t * State config object\r\n\t\t * @type {PhaserComps.ComponentClip.StateConfig}\r\n\t\t */\r\n\t\tthis.config = config;\r\n\t\t/**\r\n\t\t * Component ids, that are only active in this state\r\n\t\t * @type {Array<String>}\r\n\t\t */\r\n\t\tthis.componentIds = [];\r\n\t\tthis.componentIds = Object.keys(config);\r\n\t\t/*for (let componentId in config) {\r\n\t\t\tthis.componentIds.push(componentId);\r\n\t\t}*/\r\n\t}\r\n}\r\n\r\nclass StateManager {\r\n\t/**\r\n\t * @class StateManager\r\n\t * @memberOf PhaserComps.ComponentClip\r\n\t * @classdesc\r\n\t * For [ComponentClip]{@link PhaserComps.ComponentClip}\r\n\t * internal use only\r\n\t *\r\n\t * Shows or hides component view instances depending on which state is active.\r\n\t * Helps to get current active components by keys.\r\n\t *\r\n\t * @param {PhaserComps.ComponentClip} clip state manager creator clip instance\r\n\t * @param {Object} config Main component states config object\r\n\t *\r\n\t */\r\n\tconstructor(clip, config) {\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {PhaserComps.ComponentClip}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._clip = clip;\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {Array<String>}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._dynamicChildrenIds = [];\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {Object<State>}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._states = {};\r\n\r\n\t\t/**\r\n\t\t * State ids array\r\n\t\t * @type {Array<String>}\r\n\t\t */\r\n\t\tthis.stateIds = [];\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._components = {};\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {State}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._currentState = null;\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\tthis._currentStateId = null;\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {Object<String>}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._componentKeys = {};\r\n\r\n\t\tthis._residentComponentsByKey = {};\r\n\t\tlet idsArray = [];\r\n\t\tfor (let stateId in config.states) {\r\n\t\t\tthis.stateIds.push(stateId);\r\n\t\t\tlet state = new State(config.states[stateId]);\r\n\t\t\tthis._states[stateId] = state;\r\n\t\t\tidsArray.push(...state.componentIds);\r\n\t\t}\r\n\t\tconst uniq = []\r\n\t\tfor (let id of idsArray) {\r\n\t\t\tif (!uniq.includes(id)) {\r\n\t\t\t\tuniq.push(id);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._dynamicChildrenIds = uniq;\r\n\t}\r\n\r\n\t/**\r\n\t * @public\r\n\t * @method PhaserComps.ComponentClip.StateManager#getStateConfigById\r\n\t * @description\r\n\t * Get raw state config object by state id\r\n\t * @param {String} stateId state id\r\n\t */\r\n\tgetStateConfigById(stateId) {\r\n\t\tif (!this._states.hasOwnProperty(stateId)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this._states[stateId].config;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.ComponentClip.StateManager#addComponent\r\n\t * @param {PhaserComps.ComponentClip|Phaser.GameObjects.GameObject} component\r\n\t * component view instance, it may be text, image, sprite, or ComponentView instance\r\n\t * @param {String} childId unique child id from component config\r\n\t * @param {String} [childKey] child key from component config\r\n\t */\r\n\taddComponent(component, childId, childKey) {\r\n\r\n\t\tif (!this._dynamicChildrenIds.includes(childId)) {\r\n\t\t\tif (typeof childKey !== \"undefined\") {\r\n\t\t\t\tthis._residentComponentsByKey[childKey] = component;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._components[childId] = component;\r\n\t\t\tif (typeof childKey !== \"undefined\") {\r\n\t\t\t\tthis._componentKeys[childId] = childKey;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setup state with provided stateId, if exists\r\n\t * @method PhaserComps.ComponentClip.StateManager#setState\r\n\t * @param {String} stateId state id to setup\r\n\t * @param {Boolean} force if true, update state even if stateId was not changed\r\n\t */\r\n\tsetState(stateId, force) {\r\n\t\tif (this._currentStateId === stateId && !force) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this._states.hasOwnProperty(stateId)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._currentStateId = stateId;\r\n\t\tthis._currentState = this._states[stateId];\r\n\t\tthis.setupState();\r\n\t}\r\n\r\n\t/**\r\n\t * Get component with provided key, if exists and is present in current state\r\n\t * @method PhaserComps.ComponentClip.StateManager#getActiveComponentByKey\r\n\t * @param {String} key Component key to get\r\n\t * @returns {ComponentClip|Phaser.GameObjects.Image|Phaser.GameObjects.TileSprite|Phaser.GameObjects.Text|null}\r\n\t */\r\n\tgetActiveComponentByKey(key) {\r\n\t\tif (this._residentComponentsByKey.hasOwnProperty(key)) {\r\n\t\t\treturn this._residentComponentsByKey[key];\r\n\t\t}\r\n\t\tif (this._currentState === null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tfor (let i in this._currentState.componentIds) {\r\n\t\t\tlet id = this._currentState.componentIds[i];\r\n\t\t\tif (this._componentKeys[id] === key) {\r\n\t\t\t\treturn this._components[id];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Show state components, apply its' state positions, and hide non-state components\r\n\t * @method PhaserComps.ComponentClip.tateManager#setupState\r\n\t * @protected\r\n\t */\r\n\tsetupState() {\r\n\t\tlet idsToShow = this._currentState.componentIds;\r\n\t\tfor (let id of this._dynamicChildrenIds) {\r\n\t\t\tlet component = this._components[id];\r\n\t\t\tif (idsToShow.includes(id)) {\r\n\t\t\t\tcomponent.visible = true;\r\n\t\t\t\tComponentClip._setupCommonParams(component, this._currentState.config[id]);\r\n\t\t\t} else {\r\n\t\t\t\tcomponent.visible = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import UIButton from \"./UIButton\";\r\n\r\n/**\r\n * @class UIButtonSelect\r\n * @memberOf PhaserComps.UIComponents\r\n * @classdesc\r\n * Checkbox-like button component prototype.\r\n * Has states `up`, `over`, `down`, `disable`, `up_select`, `over_select`, `down_select`, `disable_select`,\r\n * Emits EVENT_CLICK on click.\r\n * When disabled, doesn't interact to mouse events and move to state `disable`\r\n * @extends PhaserComps.UIComponents.UIButton\r\n * @emits PhaserComps.UIComponents.UIButton.EVENT_CLICK\r\n *\r\n * @property {Boolean} enable activate/deactivate button interaction. if false, button state is set to `disable`\r\n * @property {String} label get/set button label text\r\n * @property {Boolean} select get/set switch\r\n *\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} [parent] UIComponentPrototype instance to find clip inside\r\n * @param {String} [key] key to find clip inside parent\r\n * @param {String} [labelText] text to set for a 'label' key\r\n */\r\nexport default class UIButtonSelect extends UIButton {\r\n\r\n\tconstructor(parent, key, labelText){\r\n\t\tsuper(parent, key, labelText);\r\n\r\n\t\t/**\r\n\t\t * button as selected or not\r\n\t\t * @type {Boolean}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._select = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButtonSelect#getStateId\r\n\t * @inheritDoc\r\n\t * @returns {String}\r\n\t */\r\n\tgetStateId() {\r\n\t\treturn super.getStateId() + (this._select ? \"_select\" : \"\");\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButtonSelect#_onClick\r\n\t * @inheritDoc\r\n\t */\r\n\t_onClick() {\r\n\t\tthis._select = !this._select;\r\n\t\tthis.doState();\r\n\t\tsuper._onClick();\r\n\t}\r\n\r\n\tget select() { return this._select; }\r\n\tset select(value) {\r\n\t\tif (this._select === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._select = value;\r\n\t\tthis.doState();\r\n\t}\r\n}","import UIButton from \"./UIButton\";\r\nimport UIManager from \"../manager/UIManager\";\r\n\r\nconst _EVENT_DRAG = \"event_drag\";\r\n\r\n/**\r\n * @typedef DragBounds\r\n * @memberOf PhaserComps.UIComponents.UIButtonDraggable\r\n * @property {Number} minX left drag bound\r\n * @property {Number} minY top drag bound\r\n * @property {Number} maxX right drag bound\r\n * @property {Number} maxY bottom drag bound\r\n */\r\n\r\n/**\r\n * @class UIButtonDraggable\r\n * @memberOf PhaserComps.UIComponents\r\n * @classdesc\r\n * Same as {@link UIComponents.UIButton}, but also emits EVENT_DRAG with two arguments, horizontal and vertical movement delta\r\n *\r\n * @extends UIComponents.UIButton\r\n * @emits EVENT_CLICK,\r\n * @emits EVENT_DRAG,\r\n *\r\n * @property {Boolean} enable activate/deactivate button interaction. if false, button state is set to `disable`\r\n * @property {String} label get/set button label text\r\n *\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} [parent] UIComponentPrototype instance to find clip inside\r\n * @param {String} [key] key to find clip inside parent\r\n * @param {String} [labelText] text to set for a 'label' key\r\n */\r\n\r\nexport default class UIButtonDraggable extends UIButton {\r\n\r\n\t/**\r\n\t * @event PhaserComps.UIComponents.UIButtonDraggable.EVENT_DRAG\r\n\t * @memberOf PhaserComps.UIComponents.UIButtonDraggable\r\n\t * @description\r\n\t * Emitted on drag move.\r\n\t * @param {Number} x horizontal drag movement (from drag start)\r\n\t * @param {Number} y vertical drag movement (from drag start)\r\n\t */\r\n\tstatic get EVENT_DRAG() { return _EVENT_DRAG; }\r\n\r\n\tconstructor(parent, key, labelText) {\r\n\t\tsuper(parent, key, labelText);\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type DragBounds\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._dragBounds = {\r\n\t\t\tminX: 0,\r\n\t\t\tmaxX: 0,\r\n\t\t\tminY: 0,\r\n\t\t\tmaxY: 0\r\n\t\t};\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._startDragX = 0;\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._startDragY = 0;\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {Phaser.GameObjects.Zone}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._dragZone = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Set clip drag bounds\r\n\t * @method PhaserComps.UIComponents.UIButtonDraggable#setDragBounds\r\n\t * @param {Number} minX left drag bound\r\n\t * @param {Number} minY top drag bound\r\n\t * @param {Number} maxX right drag bound\r\n\t * @param {Number} maxY bottom drag bound\r\n\t */\r\n\tsetDragBounds(minX, minY, maxX, maxY) {\r\n\t\tthis._dragBounds.minX = minX;\r\n\t\tthis._dragBounds.maxX = maxX;\r\n\t\tthis._dragBounds.minY = minY;\r\n\t\tthis._dragBounds.maxY = maxY;\r\n\t}\r\n\r\n\t/**\r\n\t * _dragZone `dragstart` event callback\r\n\t * @method PhaserComps.UIComponents.UIButtonDraggable#_onDragStart\r\n\t * @param pointer\r\n\t * @param {Phaser.GameObjects.GameObject} gameObject\r\n\t * @protected\r\n\t */\r\n\t_onDragStart(pointer, gameObject) {\r\n\t\tif (!this._dragZone || this._dragZone !== gameObject) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this._clip) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._startDragX = this._clip.x - gameObject.input.dragStartX;\r\n\t\tthis._startDragY = this._clip.y - gameObject.input.dragStartY;\r\n\t}\r\n\r\n\t/**\r\n\t * _dragZone `drag` event callback\r\n\t * @method PhaserComps.UIComponents.UIButtonDraggable#_onDrag\r\n\t * @param pointer\r\n\t * @param {Phaser.GameObjects.GameObject} gameObject\r\n\t * @param {Number} dragX\r\n\t * @param {Number} dragY\r\n\t * @protected\r\n\t */\r\n\t_onDrag(pointer, gameObject, dragX, dragY) {\r\n\t\tif (!UIManager.check(this.lockId)){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this._dragZone\t|| this._dragZone !== gameObject || this.clip) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet newX = this._startDragX + dragX;\r\n\t\tlet newY = this._startDragY + dragY;\r\n\t\tif (newX < this._dragBounds.minX) {\r\n\t\t\tnewX = this._dragBounds.minX;\r\n\t\t} else if (newX > this._dragBounds.maxX) {\r\n\t\t\tnewX = this._dragBounds.maxX;\r\n\t\t}\r\n\r\n\t\tif (newY < this._dragBounds.minY) {\r\n\t\t\tnewY = this._dragBounds.minY;\r\n\t\t} else if (newY > this._dragBounds.maxY) {\r\n\t\t\tnewY = this._dragBounds.maxY;\r\n\t\t}\r\n\t\tthis.emit(_EVENT_DRAG, newX, newY);\r\n\t}\r\n\r\n\t_setupInteractive(zone) {\r\n\t\tsuper._setupInteractive(zone);\r\n\t\tthis._dragZone = zone;\r\n\t\t//zone.scene.input.dragDistanceThreshold = 3;\r\n\t\tzone.scene.input.setDraggable(zone, true);\r\n\t\tzone.scene.input.on(\"dragstart\", this._onDragStart, this);\r\n\t\tzone.scene.input.on(\"drag\", this._onDrag, this);\r\n\t}\r\n\r\n\t_removeInteractive(zone) {\r\n\t\tsuper._removeInteractive(zone);\r\n\t\tthis._dragZone = null;\r\n\t\tzone.scene.input.setDraggable(zone, false);\r\n\t\tzone.scene.input.removeListener(\"dragstart\", this._onDragStart);\r\n\t\tzone.scene.input.removeListener(\"drag\", this._onDrag);\r\n\t}\r\n\r\n}","import UIComponentPrototype from \"./UIComponentPrototype\";\r\nimport UIButton from \"./UIButton\";\r\nimport UIButtonDraggable from \"./UIButtonDraggable\";\r\nimport UIManager from \"../manager/UIManager\";\r\n\r\nconst _EVENT_CHANGE = \"event_change\";\r\n\r\n/**\r\n * @class UIScrollBar\r\n * @memberOf PhaserComps.UIComponents\r\n * @classdesc\r\n * Scroll bar component. can be vertical or horizontal <br>\r\n * It have up and down buttons inside, draggable thumb button. <br>\r\n * `DIMENSIONS` zone defines thumb drag bounds.\r\n *\r\n * default value range is 0 to 1, You can change it by setting\r\n * min and max value. Also you can set value step, so value will always\r\n * be stepped by it\r\n *\r\n * @emits PhaserComps.UIComponents.UIScrollBar.EVENT_CHANGE\r\n * @property {Number} value current bar value, from min value to max, default is from 0 to 1\r\n *\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} [parent] UIComponentPrototype instance to find clip inside\r\n * @param {String} [key] key to find clip inside parent\r\n * @param {Boolean} [vertical=false] scroll bar behave like vertical or horizontal\r\n */\r\n\r\nexport default class UIScrollBar extends UIComponentPrototype {\r\n\r\n\t/**\r\n\t * @event PhaserComps.UIComponents.UIScrollBar.EVENT_CHANGE\r\n\t * @memberOf PhaserComps.UIComponents.UIScrollBar\r\n\t * @description\r\n\t * Emitted on scroll bar value change.\r\n\t * @param {Number} value current scrollbar value\r\n\t */\r\n\tstatic get EVENT_CHANGE() { return _EVENT_CHANGE; }\r\n\r\n\tconstructor(parent, key, vertical) {\r\n\t\tsuper(parent, key);\r\n\t\tthis._vertical = vertical || false;\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._value = 0;\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._minValue = 0;\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._maxValue = 1;\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._valueStep = 0;\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._buttonStep = 0.1;\r\n\r\n\t\t/**\r\n\t\t * scroll up/left button\r\n\t\t * @type {PhaserComps.UIComponents.UIButton}\r\n\t\t */\r\n\t\tthis.btnPrev = new UIButton(this, \"btn_up\");\r\n\t\tthis.btnPrev.on(UIButton.EVENT_CLICK, this.onPrevClick, this);\r\n\t\t/**\r\n\t\t * scroll down/right button\r\n\t\t * @type {PhaserComps.UIComponents.UIButton}\r\n\t\t */\r\n\t\tthis.btnNext = new UIButton(this, \"btn_down\");\r\n\t\tthis.btnNext.on(UIButton.EVENT_CLICK, this.onNextClick, this);\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {PhaserComps.UIComponents.UIButtonDraggable}\r\n\t\t */\r\n\t\tthis.thumb = new UIButtonDraggable(this, \"thumb\");\r\n\t\tthis.thumb.on(UIButtonDraggable.EVENT_DRAG, this._onThumbDrag, this);\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._trackStart = 0;\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._trackLength = 100;\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {PhaserComps.ComponentClip}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._thumbClip = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Setup scroll bar value bounds and value step\r\n\t * @method PhaserComps.UIComponents.UIScrollBar#setValueBounds\r\n\t * @param {Number} minValue minimum value\r\n\t * @param {Number} maxValue maximum value\r\n\t * @param {Number} [valueStep=0] value change step\r\n\t */\r\n\tsetValueBounds(minValue, maxValue, valueStep) {\r\n\t\tthis._minValue = minValue;\r\n\t\tthis._maxValue = maxValue;\r\n\t\tif (typeof valueStep !== \"undefined\") {\r\n\t\t\tthis._valueStep = valueStep;\r\n\t\t\tif (this._buttonStep < valueStep) {\r\n\t\t\t\tthis._buttonStep = valueStep;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._valueStep = 0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIScrollBar#setButtonStep\r\n\t * @param {Number} val\r\n\t */\r\n\tsetButtonStep(val) {\r\n\t\tthis._buttonStep = val;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIScrollBar#onClipAppend\r\n\t * @inheritDoc\r\n\t */\r\n\tonClipAppend(clip) {\r\n\t\tsuper.onClipAppend(clip);\r\n\t\tthis._updateClips();\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIScrollBar#_updateClips\r\n\t * @private\r\n\t */\r\n\t_updateClips() {\r\n\t\tif (!this._clip) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._thumbClip = this.thumb._clip;\r\n\t\tlet trackClip = this._clip.getChildClip(\"DIMENSIONS\");\r\n\t\tif (trackClip) {\r\n\t\t\tthis._trackStart = this._vertical ? trackClip.y : trackClip.x;\r\n\t\t\tthis._trackLength = this._vertical ? trackClip.height : trackClip.width;\r\n\r\n\t\t\tif (this._thumbClip) {\r\n\t\t\t\tthis.thumb.setDragBounds(\r\n\t\t\t\t\tthis._vertical ? this._thumbClip.x : trackClip.x,\r\n\t\t\t\t\tthis._vertical ? trackClip.y : this._thumbClip.y,\r\n\t\t\t\t\tthis._vertical ? this._thumbClip.x : trackClip.x + trackClip.width,\r\n\t\t\t\t\tthis._vertical ? trackClip.y + trackClip.height : this._thumbClip.y\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet hitZone = this._clip.getChildClip(\"HIT_ZONE\");\r\n\t\tif (hitZone) {\r\n\t\t\thitZone.on(\"pointerdown\", this._onZoneDown, this);\r\n\t\t\t//hitZone.on(\"pointerup\", this.onZoneUp, this);\r\n\t\t}\r\n\t\tthis._updateThumbFromValue();\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIScrollBar#onClipProcess\r\n\t * @inheritDoc\r\n\t */\r\n\tonClipProcess() {\r\n\t\tsuper.onClipProcess();\r\n\t\tif (!this.thumb) {// call from super constructor\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._updateClips();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIScrollBar#onPrevClick\r\n\t * @protected\r\n\t */\r\n\tonPrevClick() {\r\n\t\tif (!UIManager.check(this.lockId)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.value -= this._buttonStep;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIScrollBar#onNextClick\r\n\t * @protected\r\n\t */\r\n\tonNextClick() {\r\n\t\tif (!UIManager.check(this.lockId)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.value += this._buttonStep;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIScrollBar#_updateThumbFromValue\r\n\t * @private\r\n\t */\r\n\t_updateThumbFromValue() {\r\n\t\tif (!this._thumbClip) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet barPosition = Math.round(this._trackStart + this._trackLength * this._value);\r\n\t\tif (this._vertical) {\r\n\t\t\tthis._thumbClip.y = barPosition;\r\n\t\t} else {\r\n\t\t\tthis._thumbClip.x = barPosition;\r\n\t\t}\r\n\t\tthis.emit(_EVENT_CHANGE, this.value);\r\n\t}\r\n\r\n\tget value() {\r\n\t\tlet v = this._value * (this._maxValue - this._minValue);\r\n\t\tif (this._valueStep === 0) {\r\n\t\t\treturn v + this._minValue;\r\n\t\t}\r\n\t\tv = Math.round(v / this._valueStep) * this._valueStep;\r\n\t\treturn v + this._minValue;\r\n\t}\r\n\r\n\tset value(val) {\r\n\t\tlet v = (val - this._minValue) / (this._maxValue - this._minValue);\r\n\t\tif (v < 0) v = 0;\r\n\t\tif (v > 1) v = 1;\r\n\t\tif (v === this._value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._value = v;\r\n\t\tthis._updateThumbFromValue();\r\n\t}\r\n\r\n\t/**\r\n\t * Thumb button drag move handler\r\n\t * @param {Number} positionX\r\n\t * @param {Number} positionY\r\n\t * @private\r\n\t */\r\n\t_onThumbDrag(positionX, positionY) {\r\n\t\tif (this._trackLength === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!UIManager.check(this.lockId)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet barPosition = this._vertical ? positionY : positionX;\r\n\t\tlet newValue = (barPosition - this._trackStart) / this._trackLength;\r\n\t\tlet v = newValue * (this._maxValue - this._minValue);\r\n\t\tif (this._valueStep !== 0) {\r\n\t\t\tv = Math.round(v / this._valueStep) * this._valueStep;\r\n\t\t}\r\n\t\t// minValue added only after step normalization\r\n\t\tthis.value = v + this._minValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Zone around scrollbar thumb click handler\r\n\t * @method PhaserComps.UIComponents.UIScrollBar#_onZoneDown\r\n\t */\r\n\t_onZoneDown() {\r\n\t\t// TODO\r\n\t}\r\n}","import UIComponentPrototype from \"./UIComponentPrototype\";\r\n\r\nconst EVENT_ITEM_CHANGE = \"event_change\";\r\n\r\n/**\r\n * @class UIList\r\n * @memberOf PhaserComps.UIComponents\r\n * @classdesc\r\n *\r\n * List component. Item clip instances are supposed to exist as it's children, with keys `item_0`, `item_1` and so on.\r\n *\r\n * When data array applied, every array item is applied to its' view instance\r\n *\r\n * Useful for short lists, and for lists with custom items layout.\r\n *\r\n * @emits PhaserComps.UIComponents.UIList.EVENT_ITEM_CHANGE\r\n * @property {Array<*>} data any data array to apply to list items\r\n *\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} [parent] UIComponentPrototype instance to find clip inside\r\n * @param {String} [key] key to find clip inside parent\r\n * @param {Class} rendererClass class for items, best if extending `UIListBaseItem`\r\n */\r\n\r\n\r\nexport default class UIList extends UIComponentPrototype {\r\n\r\n\t/**\r\n\t * @event PhaserComps.UIComponents.UIList.EVENT_ITEM_CHANGE\r\n\t * @memberOf PhaserComps.UIComponents.UIList\r\n\t * @description\r\n\t * Emitted when any item emits such even.\r\n\t * @param {PhaserComps.UIComponents.UIListBaseItem} item item instance, that emitted change event\r\n\t */\r\n\tstatic get EVENT_ITEM_CHANGE() { return EVENT_ITEM_CHANGE; }\r\n\r\n\tconstructor(parent, key, rendererClass) {\r\n\t\tsuper(parent, key);\r\n\t\tthis._rendererClass = rendererClass;\r\n\t\tthis._items = [];\r\n\t}\r\n\r\n\t/**@return {*[]}*/\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\t/** @param {*[]} value */\r\n\tset data(value) {\r\n\t\tthis._data = value;\r\n\t\tthis._updateData();\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIList#clean\r\n\t * @desc Destroy all items renderer instances\r\n\t */\r\n\tclean() {\r\n\t\twhile(this._items.length !== 0) {\r\n\t\t\tlet item = this._items.pop();\r\n\t\t\titem.destroy(true);\r\n\t\t}\r\n\t}\r\n\r\n\t_updateData() {\r\n\t\tconst len = this._data.letterSpacing;\r\n\t\tfor (let index = 0; index < len; index++) {\r\n\t\t\tlet dataItem = this._data[index];\r\n\t\t\tlet item = this._getRenderer(index);\r\n\t\t\titem.data = dataItem;\r\n\t\t}\r\n\t\tthis.doState();\r\n\t}\r\n\r\n\t_getRenderer(index) {\r\n\t\tif (this._items.length - 1 < index) {\r\n\t\t\tlet renderer = new this._rendererClass(this, \"item_\" + index);\r\n\t\t\tthis._items[index] = renderer;\r\n\t\t\trenderer.on(UIList.EVENT_ITEM_CHANGE, this.onItemChange, this);\r\n \t\t}\r\n\t\treturn this._items[index];\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIList#getStateId\r\n\t * @inheritDoc\r\n\t * @returns {String}\r\n\t */\r\n\tgetStateId() {\r\n\t\treturn \"count_\" + (this._data ? this._data.length : \"0\");\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIList#destroy\r\n\t * @protected\r\n\t * @inheritDoc\r\n\t */\r\n\tdestroy() {\r\n\t\tthis.clean();\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\tonItemChange(item) {\r\n\t\tthis.emit(UIList.EVENT_ITEM_CHANGE, item);\r\n\t}\r\n}","/**\r\n * @namespace PhaserComps\r\n */\r\n\r\nimport ComponentClip from \"./clip/ComponentClip\";\r\nimport UIComponents from \"./components/UIComponents\";\r\nimport Plugin from \"./plugin/Plugin\";\r\nimport UIManager from \"./manager/UIManager\";\r\n\r\nvar PhaserComps = {\r\n\tComponentClip: ComponentClip,\r\n\tUIComponents: UIComponents,\r\n\tPlugin: Plugin,\r\n\tUIManager: UIManager\r\n};\r\n\r\nexport default PhaserComps;\r\n\r\nglobal.PhaserComps = PhaserComps;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import UIButton from \"./UIButton\";\r\nimport UIButtonRadio from \"./UIButtonRadio\";\r\nimport UIComponentPrototype from \"./UIComponentPrototype\";\r\nimport UIButtonSelect from \"./UIButtonSelect\";\r\nimport UIButtonDraggable from \"./UIButtonDraggable\";\r\nimport UIScrollBar from \"./UIScrollBar\";\r\nimport UIScrollPanel from \"./UIScrollPanel\";\r\nimport UIProgressBar from \"./UIProgressBar\";\r\nimport UIContainer from \"./UIContainer\";\r\nimport UIList from \"./UIList\";\r\nimport UIListBaseItem from \"./UIListBaseItem\";\r\n\r\n/**\r\n * @namespace PhaserComps.UIComponents\r\n */\r\n\r\nconst UIComponents = {\r\n\tUIComponentPrototype: UIComponentPrototype,\r\n\tUIButton: UIButton,\r\n\tUIButtonSelect: UIButtonSelect,\r\n\tUIButtonRadio: UIButtonRadio,\r\n\tUIButtonDraggable: UIButtonDraggable,\r\n\tUIScrollBar: UIScrollBar,\r\n\tUIScrollPanel: UIScrollPanel,\r\n\tUIProgressBar: UIProgressBar,\r\n\tUIContainer: UIContainer,\r\n\tUIList: UIList,\r\n\tUIListBaseItem: UIListBaseItem\r\n};\r\n\r\nexport default UIComponents;","import UIButtonSelect from \"./UIButtonSelect\";\r\n\r\nconst _EVENT_SELECT = \"event_select\";\r\n\r\n/**\r\n * @class UIButtonRadio\r\n * @memberOf PhaserComps.UIComponents\r\n * @extends PhaserComps.UIComponents.UIButtonSelect\r\n * @classdesc\r\n * Radio button.\r\n * Several radio buttons can be grouped by appending them to the first button in the group,\r\n * You can do it via passing first button to `appendTo` constructor argument of other instances,шаг\r\n * or use [appendToRadio]{@link PhaserComps.UIComponents.UIButtonRadio#appendToRadio} method.\r\n *\r\n * @property {Boolean} select set or get, if current instance selected\r\n * @property {*} value get or set current instance value\r\n * @property {*} valueSelected If read, returns value of currently selected radio instance in the group.\r\n * If assigned, selects radio which has provided value.\r\n *\r\n * @extends PhaserComps.UIComponents.UIButtonSelect\r\n * @emits PhaserComps.UIComponents.UIButton.EVENT_SELECT\r\n *\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} [parent] UIComponentPrototype instance to find clip inside\r\n * @param {String} [key] key to find clip inside parent\r\n * @param {String} [labelText] text to set for a 'label' key\r\n * @param {*} [value] Any value, applied to current radio button instance.\r\n * Use it to find out, what is the current selected value in the group,\r\n * or select radio by provided value\r\n * @param {UIButtonRadio} [appendTo] If specified, this instance will be appended\r\n * to provided radio group immediately\r\n */\r\n\r\nexport default class UIButtonRadio extends UIButtonSelect {\r\n\r\n\t/**\r\n\t *\r\n\t * @event PhaserComps.UIComponents.UIButtonRadio.EVENT_SELECT\r\n\t * @memberOf PhaserComps.UIComponents.UIButtonRadio\r\n\t * @description\r\n\t * Fired when some radio button of the group is selected\r\n\t */\r\n\tstatic get EVENT_SELECT() { return _EVENT_SELECT; }\r\n\r\n\tconstructor(parent, key, labelText, value, appendTo) {\r\n\t\tsuper(parent, key, labelText);\r\n\t\tthis._sibling = this;\r\n\t\tthis._value = value;\r\n\t\tif (typeof appendTo !== \"undefined\") {\r\n\t\t\tthis.appendToRadio(appendTo);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButtonRadio#appendToRadio\r\n\t * @description\r\n\t * Append this radio instance to provided radio sibling ring\r\n\t * @param {UIButtonRadio} radio radio button to append to sibling ring\r\n\t */\r\n\tappendToRadio(radio) {\r\n\t\tif (this._sibling !== this) {\r\n\t\t\tthis.removeFromSibling();\r\n\t\t}\r\n\t\tthis._sibling = radio._sibling;\r\n\t\tradio._sibling = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButtonRadio#removeFromSibling\r\n\t * @description\r\n\t * Remove this radio button from sibling ring\r\n\t */\r\n\tremoveFromSibling() {\r\n\t\t// TODO\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButtonRadio#_onClick\r\n\t * @inheritDoc\r\n\t * @protected\r\n\t */\r\n\t_onClick() {\r\n\t\tthis.select = true;\r\n\t}\r\n\r\n\tget select() { return super.select; }\r\n\tset select(val) {\r\n\t\tif (this._select === val) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsuper.select = val;\r\n\t\tif (val) {\r\n\t\t\tlet radio = this._sibling;\r\n\t\t\twhile (radio !== this) {\r\n\t\t\t\tradio.select = false;\r\n\t\t\t\tradio = radio._sibling;\r\n\t\t\t}\r\n\t\t\tthis._broadcastSelect();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIButtonRadio#_broadcastSelect\r\n\t * @description\r\n\t * Broadcast select event from all siblings\r\n\t * @private\r\n\t * @ignore\r\n\t */\r\n\t_broadcastSelect() {\r\n\t\tthis.emit(_EVENT_SELECT, this.value);\r\n\t\tlet radio = this._sibling;\r\n\t\twhile (radio !== this) {\r\n\t\t\tradio.emit(_EVENT_SELECT, this._value);\r\n\t\t\tradio = radio._sibling;\r\n\t\t}\r\n\t}\r\n\r\n\tget value() {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tset value(val) {\r\n\t\tthis._value = val;\r\n\t}\r\n\r\n\tget valueSelected() {\r\n\t\tif (this.select) {\r\n\t\t\treturn this.value;\r\n\t\t}\r\n\t\tlet radio = this._sibling;\r\n\t\twhile (radio !== this) {\r\n\t\t\tif (radio.select) {\r\n\t\t\t\treturn radio.value;\r\n\t\t\t}\r\n\t\t\tradio = radio._sibling;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tset valueSelected(val) {\r\n\t\tif (this.value === val) {\r\n\t\t\tthis.select = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet radio = this._sibling;\r\n\t\twhile (radio !== this) {\r\n\t\t\tif (radio.value === val) {\r\n\t\t\t\tradio.select = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import UIComponentPrototype from \"./UIComponentPrototype\";\r\nimport UIScrollBar from \"./UIScrollBar\";\r\n\r\n/**\r\n * @typedef ScrollBoundsObject\r\n * @description\r\n * Object is generated automatically on container's clip update, by the `dimensions` clip\r\n * @memberOf PhaserComps.UIComponents.UIScrollPanel\r\n * @property {Number} x Start x position of the container. Used, if panel is horizontal\r\n * @property {Number} y Start x position of the container. Used, if panel is vertical\r\n * @property {Number} len Scroll distance of the container. On scroll down/right,\r\n * x or y position will be subtracted by `len` multiplied by scrollbar value\r\n */\r\n\r\n\r\n/**\r\n * @class UIScrollPanel\r\n * @memberOf PhaserComps.UIComponents\r\n * @classdesc\r\n * Scrolling panel with scrollbar applied to it.\r\n * First parameter is container, where this should find the panel, scroll bar and dimensions instances\r\n * UIScrollBar instance created inside with a provided `scrollBarKey` <br><br>\r\n *\r\n * **Warning! This component doesn't extend UIComponent.ComponentPrototype**\r\n *\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} container\r\n * @param {String} panelKey\r\n * @param {String} scrollBarKey\r\n * @param {String} dimensionsKey\r\n * @param {Boolean} [vertical=false]\r\n */\r\n\r\nexport default class UIScrollPanel {\r\n\r\n\tconstructor(container, panelKey, scrollBarKey, dimensionsKey, vertical) {\r\n\t\t/** @type PhaserComps.UIComponents.UIComponentPrototype */\r\n\t\tthis._container = container;\r\n\t\tcontainer.on(UIComponentPrototype.EVENT_STATE, this._onContainerUpdate, this);\r\n\r\n\t\t/** @type String */\r\n\t\tthis._panelKey = panelKey;\r\n\t\t/** @type String */\r\n\t\tthis._dimensionsKey = dimensionsKey;\r\n\r\n\t\t/** @type PhaserComps.UIComponents.UIScrollBar */\r\n\t\tthis._scrollBar = new UIScrollBar(container, scrollBarKey, vertical);\r\n\t\tthis._scrollBar.on(UIScrollBar.EVENT_CHANGE, this._onScrollBar, this);\r\n\r\n\t\t/** @type Boolean */\r\n\t\tthis._vertical = vertical || false;\r\n\t}\r\n\r\n\t/**\r\n\t * update clip instances on container update\r\n\t * @method PhaserComps.UIComponents.UIScrollPanel#_onContainerUpdate\r\n\t * @private\r\n\t */\r\n\t_onContainerUpdate() {\r\n\t\t/** @type PhaserComps.ComponentClip */\r\n\t\tlet clip = this._container._clip;\r\n\t\tif (!clip) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/** @type PhaserComps.ComponentClip */\r\n\t\tthis._panel = clip.getChildClip(this._panelKey);\r\n\t\tlet dims = clip.getChildClip(this._dimensionsKey);\r\n\t\tif (!this._panel || !dims) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type ScrollBoundsObject\r\n\t\t */\r\n\t\tthis._scrollBounds = {\r\n\t\t\tx: dims.x,\r\n\t\t\ty: dims.y,\r\n\t\t\tlen: this._vertical ? this._panel.height - dims.height : this._panel.width - dims.width\r\n\t\t};\r\n\r\n\t\t// update current panel position\r\n\t\tthis._onScrollBar(this._onScrollBar.value);\r\n\t}\r\n\r\n\t/**\r\n\t * Update panel position on scrollbar change\r\n\t * @method PhaserComps.UIComponents.UIScrollPanel#_onScrollBar\r\n\t * @private\r\n\t */\r\n\t_onScrollBar(value) {\r\n\t\tif (!this._panel || !this._scrollBounds) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._vertical) {\r\n\t\t\tthis._panel.y = this._scrollBounds.y - this._scrollBounds.len * value;\r\n\t\t} else {\r\n\t\t\tthis._panel.x = this._scrollBounds.x - this._scrollBounds.len * value;\r\n\t\t}\r\n\t}\r\n}","import UIComponentPrototype from \"./UIComponentPrototype\";\r\n\r\nconst PROGRESS_STATE_REGEX = /progress_(\\d+)$/;\r\n\r\n/**\r\n * @typedef StepConfig\r\n * @memberOf PhaserComps.UIComponents.UIScrollBar\r\n * @extends Object\r\n *\r\n * @property {Number} stepValue max value of this step\r\n * @property {PhaserComps.ComponentClip.StateConfig} config\r\n */\r\n\r\n/**\r\n * @memberOf PhaserComps.UIComponents\r\n * @class UIProgressBar\r\n * @classdesc\r\n * Progress bar.\r\n *\r\n * Setup states `progress_0` and `progress_100` in Animate,\r\n * and all differences between them will be interpolated to the current progress value.\r\n * Also you can create intermediate states, if you want to control intermediate interpolation behaviour.\r\n\r\n * For example, if you want an indicator to rotate a full circle, you need to create additional\r\n * intermediate states `progress_30` and `progress_70` with 30% and 70$ of rotation,\r\n * to be sure, that indicator will rotate in the needed direction.\r\n *\r\n * Also you can use intermediate states to make interpolation not linear for all progress range.\r\n *\r\n * Available properties for interpolating are\r\n * `x`, `y`, `scaleX`, `scaleY`, `angle`, `alpha`\r\n *\r\n * @property {Number} value current progress value, between 0 and 1\r\n *\r\n * @extends PhaserComps.UIComponents.UIComponentPrototype\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} [parent] UIComponentPrototype instance to find clip inside\r\n * @param {String} [key] key to find clip inside parent\r\n */\r\nexport default class UIProgressBar extends UIComponentPrototype {\r\n\tconstructor(parent, key) {\r\n\t\tsuper(parent, key);\r\n\r\n\t\t/**\r\n\t\t * current progress value\r\n\t\t * @type {Number}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._value = 0;\r\n\t\t/**\r\n\t\t *\r\n\t\t * @type {Array<StepConfig>}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._steps = [];\r\n\t}\r\n\r\n\tget value() {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\tset value(v) {\r\n\t\tthis._value = v;\r\n\t\tthis._applyValue();\r\n\t}\r\n\r\n\r\n\tonClipAppend(clip) {\r\n\t\tsuper.onClipAppend(clip);\r\n\t\tthis._makeSteps(clip);\r\n\t\tthis._applyValue();\r\n\t}\r\n\r\n\t/**\r\n\t * Apply current value to setup elements positions\r\n\t * @method PhaserComps.UIComponents.UIScrollBar#_applyValue\r\n\t * @private\r\n\t */\r\n\t_applyValue() {\r\n\t\tif (!this._clip) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet i, lowConfig, highConfig, interpolation, resultConfig, childId;\r\n\t\tlet stepsCount = this._steps.length;\r\n\t\tfor (i = 0; i < stepsCount - 1; i++) {\r\n\t\t\tlet low = this._steps[i];\r\n\t\t\tlet high = this._steps[i + 1];\r\n\t\t\tif (low.stepValue === this._value) {\r\n\t\t\t\tresultConfig = low.config;\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (high.stepValue === this._value) {\r\n\t\t\t\tresultConfig = high.config;\r\n\t\t\t\tbreak;\r\n\t\t\t} else if (this._value > low.stepValue && this._value < high.stepValue) {\r\n\t\t\t\tlowConfig = low.config;\r\n\t\t\t\thighConfig = high.config;\r\n\t\t\t\tinterpolation = (this._value - low.stepValue) / (high.stepValue - low.stepValue);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// make interpolated children configs\r\n\t\tif (!resultConfig) {\r\n\t\t\tresultConfig = {};\r\n\t\t\tfor (childId in lowConfig) {\r\n\t\t\t\tif (!highConfig.hasOwnProperty(childId)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlet lowChildConfig = lowConfig[childId];\r\n\t\t\t\tlet highChildConfig = highConfig[childId];\r\n\t\t\t\tresultConfig[childId] = {\r\n\t\t\t\t\tx: lowChildConfig.x + (highChildConfig.x - lowChildConfig.x) * interpolation,\r\n\t\t\t\t\ty: lowChildConfig.y + (highChildConfig.y - lowChildConfig.y) * interpolation,\r\n\t\t\t\t\tscaleX: lowChildConfig.scaleX + (highChildConfig.scaleX - lowChildConfig.scaleX) * interpolation,\r\n\t\t\t\t\tscaleY: lowChildConfig.scaleY + (highChildConfig.scaleY - lowChildConfig.scaleY) * interpolation,\r\n\t\t\t\t\tangle: lowChildConfig.angle + (highChildConfig.angle - lowChildConfig.angle) * interpolation,\r\n\t\t\t\t\talpha: lowChildConfig.alpha + (highChildConfig.alpha - lowChildConfig.alpha) * interpolation\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// apply children configs\r\n\t\tfor (childId in resultConfig) {\r\n\t\t\tthis._clip.applyChildParams(childId, resultConfig[childId]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Retreive all progress states and setup all progress steps, that will be used to control\r\n\t * @param {PhaserComps.ComponentClip} clip\r\n\t * @private\r\n\t */\r\n\t_makeSteps(clip) {\r\n\t\tlet stateIds = clip.getStateIds();\r\n\t\t/**\r\n\t\t * @type {{stepValue: number, config: {}}[]}\r\n\t\t * @protected\r\n\t\t */\r\n\t\tthis._steps = [];\r\n\t\tfor (let stateId of stateIds) {\r\n\t\t\tif (!PROGRESS_STATE_REGEX.test(stateId)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet stepConfig = {};\r\n\t\t\tlet stepObject = {\r\n\t\t\t\tstepValue: parseInt(PROGRESS_STATE_REGEX.exec(stateId)[1]) / 100,\r\n\t\t\t\tconfig: stepConfig\r\n\t\t\t};\r\n\t\t\tlet stateConfig = clip.getStateConfig(stateId);\r\n\t\t\tfor (let childId in stateConfig) {\r\n\t\t\t\tstepConfig[childId] = UIProgressBar._makeFullConfig(stateConfig[childId]);\r\n\t\t\t}\r\n\t\t\tthis._steps.push(stepObject);\r\n\t\t}\r\n\t\tthis._steps.sort((a, b) => a.stepValue - b.stepValue);\r\n\t}\r\n\r\n\t/**\r\n\t * Obviously create all state properties, even if they have default values\r\n\t *\r\n\t * @param config\r\n\t * @returns {{\r\n\t * \tscaleX: number,\r\n\t * \tscaleY: number,\r\n\t * \talpha: number,\r\n\t * \tx: number,\r\n\t * \ty: number,\r\n\t * \tangle: number\r\n\t * }}\r\n\t * @private\r\n\t */\r\n\tstatic _makeFullConfig(config) {\r\n\t\treturn {\r\n\t\t\tx: config.hasOwnProperty(\"x\") ? config.x : 0,\r\n\t\t\ty: config.hasOwnProperty(\"y\") ? config.y : 0,\r\n\t\t\tscaleX: config.hasOwnProperty(\"scaleX\") ? config.scaleX : 1,\r\n\t\t\tscaleY: config.hasOwnProperty(\"scaleY\") ? config.scaleY : 1,\r\n\t\t\tangle: config.hasOwnProperty(\"angle\") ? config.angle : 0,\r\n\t\t\talpha: config.hasOwnProperty(\"alpha\") ? config.alpha : 1\r\n\t\t}\r\n\t}\r\n}","import UIComponentPrototype from \"./UIComponentPrototype\";\r\nimport 'phaser';\r\n\r\n/**\r\n * @memberOf PhaserComps.UIComponents\r\n * @class UIContainer\r\n * @classdesc\r\n * Base container component. Allows to add dynamically created UIComponents inside other components.\r\n *\r\n * Child components clips must be root components only, not any clip's children.\r\n *\r\n * Note, that UIContainer can be only a child component of another UIComponentPrototype instance.\r\n *\r\n * @extends PhaserComps.UIComponents.UIComponentPrototype\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} parent UIComponentPrototype instance to find clip inside\r\n * @param {String} key key to find clip inside parent\r\n */\r\n\r\nexport default class UIContainer extends UIComponentPrototype {\r\n\r\n\tconstructor(parent, key) {\r\n\t\tsuper(parent, key);\r\n\r\n\t\t/**\r\n\t\t * List of children UIComponentPrototypes added\r\n\t\t * @type {Array<PhaserComps.UIComponents.UIComponentPrototype>}\r\n\t\t * @private\r\n\t\t */\r\n\t\tthis._children = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIContainer#addChild\r\n\t * @description\r\n\t * Adds child to children list, and adds it to Phaser container instance, if one exists\r\n\t *\r\n\t * @param {PhaserComps.UIComponents.UIComponentPrototype} child child component to add\r\n\t * @return {PhaserComps.UIComponents.UIComponentPrototype} child\r\n\t */\r\n\taddChild(child) {\r\n\t\tif (this._children.indexOf(child) !== -1) {\r\n\t\t\treturn child; // TODO move to top?\r\n\t\t}\r\n\t\tthis._children.push(child);\r\n\r\n\t\t// add to container instance, or hide\r\n\t\tif (this._clip) {\r\n\t\t\tchild._clip.visible = true;\r\n\t\t\tthis._addUIComponentToContainerClip(child);\r\n\t\t} else {\r\n\t\t\tchild._clip.visible = false;\r\n\t\t}\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIContainer#removeChild\r\n\t * @description\r\n\t * Removes child from children list, and removes it from Phaser container instance, if one exists\r\n\t *\r\n\t * @param {PhaserComps.UIComponents.UIComponentPrototype} child child component to remove\r\n\t * @return {PhaserComps.UIComponents.UIComponentPrototype} returns child param\r\n\t */\r\n\tremoveChild(child) {\r\n\t\tlet index = this._children.indexOf(child);\r\n\t\tif (index === -1) {\r\n\t\t\treturn child;\r\n\t\t}\r\n\t\tthis._children.splice(index, 1);\r\n\r\n\t\tif (this._clip) {\r\n\t\t\tthis._removeUIComponentFromContainerClip(child);\r\n\t\t}\r\n\t\treturn child;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {PhaserComps.UIComponents.UIComponentPrototype} child\r\n\t * @private\r\n\t */\r\n\t_addUIComponentToContainerClip(child) {\r\n\t\tthis._clip.add(child._clip);\r\n\t\tchild._clip.visible = true;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {PhaserComps.UIComponents.UIComponentPrototype} child\r\n\t * @param {Boolean} [destroyChild=false]\r\n\t * @private\r\n\t */\r\n\t_removeUIComponentFromContainerClip(child, destroyChild) {\r\n\t\tthis._clip.remove(child._clip, destroyChild);\r\n\t\tchild._clip.visible = false;\r\n\t}\r\n\r\n\tonClipAppend(clip) {\r\n\t\tsuper.onClipAppend(clip);\r\n\t\tif (clip) {\r\n\t\t\tfor (let child of this._children) {\r\n\t\t\t\tthis._addUIComponentToContainerClip(child);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tonClipRemove(clip) {\r\n\t\tsuper.onClipRemove(clip);\r\n\t\t// hide and remove children from current container\r\n\t\tif (clip) {\r\n\t\t\tfor (let child of this._children) {\r\n\t\t\t\tthis._removeUIComponentFromContainerClip(child);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\t// remove and destroy children\r\n\t\tfor (let child of this._children) {\r\n\t\t\tif (this._clip) { // TODO check if needed\r\n\t\t\t\tthis._removeUIComponentFromContainerClip(child);\r\n\t\t\t}\r\n\t\t\tchild.destroy();\r\n\t\t}\r\n\t\tthis._children.length = 0;\r\n\t\tsuper.destroy();\r\n\t}\r\n}","import UIComponentPrototype from \"./UIComponentPrototype\";\r\nimport UIList from \"./UIList\";\r\n\r\n\r\n/**\r\n * @class UIListBaseItem\r\n * @memberOf PhaserComps.UIComponents\r\n * @classdesc\r\n *\r\n * Base class for UIList component renderer. Extend it to create custom list items renderers.\r\n *\r\n * @emits PhaserComps.UIComponents.UIList.EVENT_ITEM_CHANGE\r\n * @property {*} data any data from UIList data list\r\n *\r\n * @param {PhaserComps.UIComponents.UIComponentPrototype} [parent] UIComponentPrototype instance to find clip inside\r\n * @param {String} [key] key to find clip inside parent\r\n * @param {Class} rendererClass class for items, best if extending `UIListBaseItem`\r\n */\r\n\r\nexport default class UIListBaseItem extends UIComponentPrototype {\r\n\tconstructor(parent, key) {\r\n\t\tsuper(parent, key);\r\n\t\tthis._data = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIListBaseItem#notifyChange\r\n\t * @desc Emits change event to containing UIList instance\r\n\t */\r\n\tnotifyChange() {\r\n\t\tthis.emit(UIList.EVENT_ITEM_CHANGE, this);\r\n\t}\r\n\r\n\t/**\r\n\t * @method PhaserComps.UIComponents.UIListBaseItem#_commitData\r\n\t * @protected\r\n\t * @desc apply data from setter, override it\r\n\t */\r\n\t_commitData() {\r\n\t\t// override\r\n\t}\r\n\r\n\tget data() {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\tset data(value) {\r\n\t\tthis._data = value;\r\n\t\tthis._commitData();\r\n\t}\r\n}","import \"phaser\";\r\nimport ComponentClip from \"../clip/ComponentClip\";\r\n\r\n/**\r\n * @class Plugin\r\n * @memberOf PhaserComps\r\n * @classdesc\r\n * Phaser 3 plugin, adds `ui_component` method to scene GameObjectFactory and GameObjectCreator,\r\n * that creates a {@link PhaserComps.ComponentClip} instance\r\n *\r\n * *Note. Factory method (`scene.make.ui_component()`) also adds clip instance to scene*\r\n *\r\n * Implementation example:\r\n * ```javascript\r\n * import \"phaser-ui-comps\"\r\n *\r\n * var config = {\r\n *     type: Phaser.AUTO,\r\n *     parent: \"example\",\r\n *     width: 800,\r\n *     height: 600,\r\n *     scene: {\r\n *  \t   create: create\r\n *     },\r\n *     plugins: {\r\n *  \t   global: [\r\n *  \t\t   PhaserComps.Plugin.DefaultCfg\r\n *  \t   ]\r\n *     }\r\n * var game = new Phaser.Game(config);\r\n *\r\n * create() {\r\n *     let configObject = {}; // here must be real jsfl-generated config object\r\n *     let texture_name = \"your_texture_name\";\r\n *     this.add.ui_component(configObject, [texture_name]);\r\n * }\r\n * ```\r\n * @see PhaserComps.ComponentClip\r\n *\r\n */\r\nexport default class Plugin extends Phaser.Plugins.BasePlugin {\r\n    constructor(mgr) {\r\n        super(mgr);\r\n        mgr.registerGameObject(\"ui_component\", this.addComponent, this.makeComponent);\r\n    }\r\n\r\n    addComponent(config, textures) {\r\n        let clip = new ComponentClip(this.scene, config, textures);\r\n        this.scene.add.existing(clip);\r\n        return clip;\r\n    }\r\n\r\n    makeComponent(config, textures) {\r\n        return new ComponentClip(this.scene, config, textures);\r\n    }\r\n}\r\n\r\nconst DefaultCfg = {\r\n    key: \"UIComponents\",\r\n    plugin: Plugin,\r\n    start: true\r\n};\r\n\r\n/**\r\n * Default plugin config\r\n *\r\n * @const PhaserComps.Plugin.DefaultCfg\r\n * @memberOf PhaserComps.Plugin\r\n * @type PluginObjectItem\r\n */\r\nPlugin.DefaultCfg = DefaultCfg;"],"sourceRoot":""}